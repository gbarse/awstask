version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "🔧  Installing SAM CLI …"
      - pip install --quiet aws-sam-cli

  pre_build:
    commands:
      - echo "🔐  Logging in to ECR"
      - docker login --username AWS --password "$(aws ecr get-login-password --region us-east-2)" 151182332702.dkr.ecr.us-east-2.amazonaws.com

      # tag every image with the Git commit SHA (handy for roll-backs)
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:-latest}
      - IMAGE_URI=151182332702.dkr.ecr.us-east-2.amazonaws.com/gorb/aws-task:${IMAGE_TAG}
      - echo "Using tag $IMAGE_TAG"

  build:
    commands:
      - echo "🐳  Building Docker image"
      - cd $CODEBUILD_SRC_DIR
      - mvn -q clean package                       # builds app.jar **and** Lambda jar
      - docker build -t "$IMAGE_URI" .             # the dot assumes Dockerfile is in repo root
                                                   # if not -> use  -f path/to/Dockerfile  <context>
      - echo "☁️  Packaging Lambda with SAM"
      - sam package \
          --template-file templateSAM.yml \
          --s3-bucket gor-barseghyan-site \
          --output-template-file packaged.yml

  post_build:
    commands:
      - echo "📤  Pushing image to ECR"
      - docker push "$IMAGE_URI"

      # ---- artifact for ECS deploy stage ----
      - echo "📝  Creating imagedefinitions.json"
      - printf '[{"name":"GorB-image-app","imageUri":"%s"}]' "$IMAGE_URI" > imagedefinitions.json

artifacts:
  files:                       # <- makes CodeBuild happy (primary artifact)
    - imagedefinitions.json
  secondary-artifacts:
    ecsArtifact:
      base-directory: .
      files:
        - imagedefinitions.json
    lambdaArtifact:
      base-directory: .
      files:
        - packaged.yml
